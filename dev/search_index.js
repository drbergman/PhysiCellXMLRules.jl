var documenterSearchIndex = {"docs":
[{"location":"man/guide/#Guide","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"To convert a PhysiCell rules file (in CSV format) into an XML format, use","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"using PhysiCellXMLRules\nnew_file = \"rules.xml\"\nsource_file = \"rules.csv\"\nwriteRules(new_file, source_file)","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"To convert from the XML format to the CSV format, use","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"using PhysiCellXMLRules\nnew_file = \"rules.csv\"\nsource_file = \"rules.xml\"\nexportRulesToCSV(new_file, source_file)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PhysiCellXMLRules","category":"page"},{"location":"#PhysiCellXMLRules","page":"Home","title":"PhysiCellXMLRules","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PhysiCellXMLRules.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Convert PhysiCell rules between CSV and XML formats. Enables conversion between https://github.com/MathCancer/PhysiCell/ and https://github.com/drbergman/PhysiCell/.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PhysiCellXMLRules]\nPages = [\"PhysiCellXMLRules.jl\"]","category":"page"},{"location":"#PhysiCellXMLRules.exportRulesToCSV-Tuple{AbstractString, AbstractString}","page":"Home","title":"PhysiCellXMLRules.exportRulesToCSV","text":"exportRulesToCSV(path_to_csv::AbstractString, path_to_xml::AbstractString)\n\nExport the rules from the XML file at path_to_xml to the CSV file at path_to_csv.\n\nNote: this is not the inverse of writeRules as writeRules discards comments in the original CSV and exportRulesToCSV adds comments to the exported CSV file.\n\n\n\n\n\n","category":"method"},{"location":"#PhysiCellXMLRules.standardizeCustomName-Tuple{Any}","page":"Home","title":"PhysiCellXMLRules.standardizeCustomName","text":"standardizeCustomName(name::AbstractString)\n\nIf the name for a signal or behavior starts with \"custom:\", use the synonym \"custom <name>\" instead.\n\npcvct uses : to use attributes to specify elements in an XML path. So, we use custom <name> to avoid incorrect splitting on :.\n\n\n\n\n\n","category":"method"},{"location":"#PhysiCellXMLRules.standardizeCustomNameExport-Tuple{Any}","page":"Home","title":"PhysiCellXMLRules.standardizeCustomNameExport","text":"standardizeCustomNameExport(name::AbstractString)\n\nIf the name for a signal or behavior starts with \"custom \", use the synonym \"custom:<name>\" instead when exporting to a CSV.\n\nBoth are acceptable, but this function will convert it to the more standard format in PhysiCell.\n\n\n\n\n\n","category":"method"},{"location":"#PhysiCellXMLRules.writeRules-Tuple{AbstractString, AbstractString}","page":"Home","title":"PhysiCellXMLRules.writeRules","text":"writeRules(path_to_xml::AbstractString, path_to_csv::AbstractString)\n\nWrite the rules from the CSV file at path_to_csv to the XML file at path_to_xml.\n\nNote: this is not the inverse of exportRulesToCSV as writeRules discards comments in the original CSV and exportRulesToCSV adds comments to the exported CSV file.\n\n\n\n\n\n","category":"method"}]
}
